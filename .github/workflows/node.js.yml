# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

    
jobs:
  # unit-tests:

    
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [18.x, 20.x, 22.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npm run test:unit


      
  build:

    name: Build

    runs-on: ubuntu-latest
    
    # needs: unit-tests
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} 

    - name: Login to amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vue-frontend:latest
  
#  cypress-run:

 #   runs-on: ubuntu-22.04
    
 #   steps:
 #     - name: Checkout
 #       uses: actions/checkout@v4
 #     - name: Set up Node.js for Cypress
 #       uses: actions/setup-node@v4
 #       with:
 #         node-version: '20.x'
 #         cache: 'npm'
 #     - name: Install dependencies
 #       run: npm ci
 #     - name: Install serve globally
 #       run: npm install -g serve
 #     - name : build
 #       run: npm run build
 #     - name: start server
 #       run: |
 #         HOST=0.0.0.0 PORT=8080 npm run preview &  # Run in background
  #        sleep 5 
  #    - name: cypress run
   #     uses: cypress-io/github-action@v6
   #     with:
    #      wait-on: 'http://localhost:8080'
   #       wait-on-timeout: 120
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Delete Existing Resources
        run: |
              aws eks update-kubeconfig --name devops-eks --region ${{ secrets.AWS_REGION }}
              kubectl delete deployment  vue-frontend service vue-frontend --ignore-not-found=true 
              echo "Waiting 30 seconds for resources to be fully deleted..."
              sleep 30
        env:
          TF_VAR_vpc_id: ${{ secrets.AWS_VPC_ID }}
          TF_VAR_ecr_repo_name: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vue-frontend:latest

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -target=kubernetes_deployment.vue_frontend -target=kubernetes_service.vue_frontend -target=kubernetes_horizontal_pod_autoscaler_v2.vue_frontend -target=kubernetes_ingress_v1.vue_frontend        
        env:
          TF_VAR_vpc_id: ${{ secrets.AWS_VPC_ID }}
          TF_VAR_ecr_repo_name: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vue-frontend:latest


#      - name: Install kubectl
 #       run: |
  #       curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.25.3/bin/linux/amd64/kubectl
   #      chmod +x ./kubectl
    #     sudo mv ./kubectl /usr/local/bin/kubectl

  #    - name: EKS kubeconfig
  #      run : |
   #      aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

  #    - name: Deploy to Kubernetes
  #      run: |
  #        kubectl apply -f deployment.yaml
   #       kubectl rollout status deployment/devop-frontend-deployment
      
   #   - name: Deployment vertifcation
   #     run: |
    #      kubectl get pods -n default

      

         

